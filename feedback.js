function showHint(t){const e=document.getElementById("hint-modal"),n=document.getElementById("modal-title"),o=document.getElementById("modal-content");n.textContent="Hint",o.textContent=hints[t-1],e.style.display="flex"}function getInstructions(t){return feedbackScripts[t-1].instructions}function showConfirmation(t,e,n){const o=document.getElementById("hint-modal"),i=document.getElementById("modal-title"),a=document.getElementById("modal-content");i.textContent=e?"Success!":"Incorrect Submission",a.innerHTML=`<p class="${e?"text-green-400":"text-red-400"}">${t}</p>`,n&&(a.innerHTML+=`<p class="mt-4">Detailed Instructions:</p><ul class="list-disc pl-5">${n.split("<br>").map(t=>`<li>${t}</li>`).join("")}</ul>`),o.style.display="flex"}function closeModal(){document.getElementById("hint-modal").style.display="none"}const hints=["Use Ctrl+U to view source.","Use atob() in console.","Check F12 > Application > Cookies.","Inspect hidden input.","Check F12 > Console.","Look in robots.txt.","Check img alt attribute.","Append ?flag= to URL.","Search CSS comments.","Find HTML comments.","Check script tag.","Shift letters back by 3.","Use decodeURIComponent().","Use a Morse code chart.","Convert hex to ASCII.","Enter 'admin' in input.","Run localStorage.getItem('flag').","Check 'X-Flag' header.","Extract from alert().","Extract 'path' from JSON.","Try SQL injection.","Use key 'cipher'.","Check audio metadata.","Extract hex payload.","Enter sudo command.","Inspect file header.","Extract token value.","Check VLAN name.","Add extra characters.","Hash flag{md5}.","Analyze eval code.","Compute c^d mod n.","Extract 'data' field.","Extract flag after AAAA.","Convert hex to ASCII.","Use SQL comment.","Search memory strings.","XOR with key 42.","Check ACL port.","Extract flag part.","Decode, XOR, format.","Run JS, decode.","Hex to ASCII, XOR.","Hex to ASCII, append.","Inject SQL, extract.","Hex to ASCII, reverse.","Decode, shift by 5.","Base64, XOR, format.","Check OSPF network.","Extract from rax."];const feedbackScripts=[{id:1,instructions:"1. Open developer tools (F12 > Elements).<br>2. Find &lt;style&gt; tag.<br>3. Locate #hidden-flag-1.<br>4. Use content as flag."},{id:2,instructions:"1. Copy Base64 string.<br>2. Open console (F12 > Console).<br>3. Run atob('ZmxhZ3tiYXNlNjRfZWFzeX0=').<br>4. Result is flag."},{id:3,instructions:"1. Open F12 > Application.<br>2. Expand 'Cookies'.<br>3. Find 'ctf_flag' cookie.<br>4. Use value as flag."},{id:4,instructions:"1. Open F12 > Elements.<br>2. Find &lt;input type='hidden'&gt;.<br>3. Use value as flag."},{id:5,instructions:"1. Open F12 > Console.<br>2. Find console.log message.<br>3. Use message as flag."},{id:6,instructions:"1. Read simulated robots.txt.<br>2. Find 'Disallow' entry.<br>3. Use value as flag."},{id:7,instructions:"1. Open F12 > Elements.<br>2. Find &lt;img&gt; tag.<br>3. Use alt attribute as flag."},{id:8,instructions:"1. Append ?flag= to URL.<br>2. Press Enter.<br>3. Use query value as flag."},{id:9,instructions:"1. View page source (Ctrl+U).<br>2. Find CSS comments.<br>3. Use comment as flag."},{id:10,instructions:"1. View page source (Ctrl+U).<br>2. Find HTML comments.<br>3. Use comment as flag."},{id:11,instructions:"1. Open F12 > Sources.<br>2. Find &lt;script&gt; tag.<br>3. Use 'x' variable value as flag."},{id:12,instructions:"1. Write cipher: kodi{esppsl}.<br>2. Shift each letter back by 3 (e.g., k -> h).<br>3. Keep braces unchanged.<br>4. Result is flag."},{id:13,instructions:"1. Copy URL-encoded string.<br>2. Open console (F12 > Console).<br>3. Run decodeURIComponent('%66%6c%61%67%7b%75%72%6c%7d').<br>4. Result is flag."},{id:14,instructions:"1. Copy Morse code.<br>2. Use a Morse chart (e.g., F=..-.).<br>3. Decode each part.<br>4. Format as flag{...}."},{id:15,instructions:"1. Copy hex string.<br>2. Convert to ASCII using a tool.<br>3. Result is flag."},{id:16,instructions:"1. Enter 'admin' in input field.<br>2. Submit to reveal flag."},{id:17,instructions:"1. Open F12 > Console.<br>2. Run localStorage.getItem('flag').<br>3. Use returned value as flag."},{id:18,instructions:"1. Read simulated HTTP header.<br>2. Find 'X-Flag' value.<br>3. Use as flag."},{id:19,instructions:"1. Read &lt;script&gt; content.<br>2. Extract string from alert().<br>3. Use as flag."},{id:20,instructions:"1. Imagine analyzing packet in Wireshark.<br>2. Extract 'path' from HTTP JSON.<br>3. Use path value as flag."},{id:21,instructions:"1. Type ' OR '1'='1 in input.<br>2. Submit to bypass login.<br>3. Use revealed flag."},{id:22,instructions:"1. Write cipher: lqrf{ekqtxl}.<br>2. Decrypt using key 'cipher'.<br>3. Keep braces.<br>4. Result is flag."},{id:23,instructions:"1. Imagine inspecting audio metadata.<br>2. Find hidden field.<br>3. Use value as flag."},{id:24,instructions:"1. Imagine Wireshark TCP packet.<br>2. Extract hex 'payload'.<br>3. Convert to ASCII.<br>4. Use as flag."},{id:25,instructions:"1. Enter sudo command as shown.<br>2. Extract flag part.<br>3. Submit as flag."},{id:26,instructions:"1. Imagine using hex editor.<br>2. Find string in file header.<br>3. Use as flag."},{id:27,instructions:"1. Extract token from description.<br>2. Use token value as flag."},{id:28,instructions:"1. Imagine Packet Tracer.<br>2. Analyze vlan 10 configuration.<br>3. Use VLAN name as flag."},{id:29,instructions:"1. Enter flag with extra chars (e.g., xyz).<br>2. Submit to bypass regex.<br>3. Use flag part."},{id:30,instructions:"1. Copy MD5 hash.<br>2. Hash flag{md5} to MD5.<br>3. Verify match.<br>4. Use as flag."},{id:31,instructions:"1. Copy eval function.<br>2. Run in console.<br>3. Analyze replacements.<br>4. Use result as flag."},{id:32,instructions:"1. Use RSA: m = c^d mod n.<br>2. Compute 123456789^123 mod 123457.<br>3. Convert to ASCII.<br>4. Use as flag."},{id:33,instructions:"1. Imagine Wireshark UDP packet.<br>2. Extract 'data' field.<br>3. Use as flag."},{id:34,instructions:"1. Enter input with AAAA prefix.<br>2. Extract flag{...} part.<br>3. Submit as flag."},{id:35,instructions:"1. Copy hex string.<br>2. Convert to ASCII.<br>3. Use result as flag."},{id:36,instructions:"1. Enter admin' -- in input.<br>2. Submit to bypass.<br>3. Use revealed flag."},{id:37,instructions:"1. Imagine memory dump analysis.<br>2. Search for strings.<br>3. Use flag-like string."},{id:38,instructions:"1. Extract hex 'data'.<br>2. XOR each byte with 42.<br>3. Convert to ASCII.<br>4. Use as flag."},{id:39,instructions:"1. Imagine Packet Tracer.<br>2. Analyze access-list 101.<br>3. Use port after 'eq' as flag."},{id:40,instructions:"1. Enter format string as shown.<br>2. Extract flag{...} part.<br>3. Submit as flag."},{id:41,instructions:"1. Decode Base64: ZmxhZw==.<br>2. XOR each byte with 42.<br>3. Format as flag{...}.<br>4. Submit as flag."},{id:42,instructions:"1. Run JS in console.<br>2. Decode Base64 result.<br>3. Format as flag{...}.<br>4. Submit as flag."},{id:43,instructions:"1. Extract hex 'data'.<br>2. Convert to ASCII.<br>3. XOR with 42.<br>4. Format as flag{...}."},{id:44,instructions:"1. Extract hex from audio.<br>2. Convert to ASCII.<br>3. Append '_stego'.<br>4. Format as flag{...}."},{id:45,instructions:"1. Inject ' OR 1=1 --.<br>2. Extract flag_sql.<br>3. Format as flag{...}.<br>4. Submit as flag."},{id:46,instructions:"1. Extract hex string.<br>2. Convert to ASCII.<br>3. Reverse string.<br>4. Format as flag{...}."},{id:47,instructions:"1. Decode Base64: YmFzZQ==.<br>2. Apply Caesar shift 5.<br>3. Format as flag{...}.<br>4. Submit as flag."},{id:48,instructions:"1. Extract 'data' field.<br>2. Decode Base64.<br>3. XOR with 42.<br>4. Format as flag{...}."},{id:49,instructions:"1. Imagine Packet Tracer.<br>2. Analyze OSPF config.<br>3. Use network statement as flag."},{id:50,instructions:"1. Read assembly code.<br>2. Extract value in rax.<br>3. Use as flag."}];
